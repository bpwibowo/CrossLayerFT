### components ### 
# the basic building blocks are components and there are currently four types.
#
# - Logic: 
#   - this type represents the sequential and combinational logic in
#     a stage. 
#   - area, delay and energy numbers are retrieved from a database. the
#     component name and some knobs (e.g. fetch_width) are used to do the
#     lookup. see power_db.py for each stage's required parameters.
#   - the area, delay, energy numbers were taken after synthesis of the
#     entire stage, but do not include SRAMs or other custom devices, only standard
#     cells. the delay is the portion of the critical path that the standard cells
#     contribute. any SRAMs or other structures must be added to this delay to get
#     the true delay of the stage. 
#   - the area, delay and energy numbers retrieved from the database are for the 
#     entire component, not per 'way'. therefore, n instructions passing through
#     the stage constitutes one access, where n is the width of the stage. 
#
# - SRAM/CAM
#   - this type represents a static RAM or CAM.
#   - area, delay and energy are generated by FabMem.
#   - required parameters
#     - words: number of words in the memory.
#     - width: width of each word, in bits.
#     - read_ports: number of read-only ports.
#     - write_ports: number of write-only ports.
#     - read_accesses: number of read accesses.
#     - write_accesses: number of write accesses.
#   - these numbers are stored in a database after being generated to avoid
#     having to regenerate them.
#   - memories are limited to 45nm (FreePDK45), 512 words for RAMs and 256 words
#     for CAMs.
#   - ports are limited to either 2xR-xW or xR-xW for RAMS and xR-xW for CAMs,
#     where 1 <= x <= 8
#
# - CactiSRAM
#   - this type is another way of representing an SRAM.
#   - area, delay and energy are generated using cacti 6.5.
#   - required parameters
#     - words: number of words in the memory.
#     - width: width of each word, in bits.
#   - see cacti.py for all available parameters and default values.
#
# - Cache
#   - this type represents a cache, including tag and data arrays
#   - area, delay and energy are generated using cacti 6.5.
#   - required parameters
#     - sets: number of blocks in each way.
#     - block_size: width of each block, in bytes.
#   - see cacti.py for all available parameters and default values.
#
### stages ###
#
# stages require one or more components and one or more paths. each path is a
# list of components that forms a possible critical path through the stage. the
# delay of each component in a path is summed, and the path with the largest
# delay decides the total delay of that stage. the area and energy of the stage 
# includes the summation of all its components.
#
### cores ###
#
# - cores are made up of stages (e.g. rename) and loose components (e.g. L2
#   cache). 
# - the total area and energy of the core is the summation of all its
#   stages and components. 
# - the cycle_time of the core is, by default, the greatest
#   delay of a single stage in the list 'fetch_to_exe_stages'. if
#   perfect_pipelining is enabled, the total delay of all stages in
#   'fetch_to_exe_stages' is divided by 'fetch_to_exe_depth'. if
#   'fetch_to_exe_depth' is not specified, then the length of
#   'fetch_to_exe_stages' is used.
# - required parameters
#   - cycles: total number of cycles. this is used to calculate total energy
#   - fetch_to_exe_stages: list of the stages between fetch and execute
#     (inclusive).
#   - stages: list of stages in the core 
#
###
---
processor:
    tech: 45
    cores:
        core_0:
            # 1: OOO; 0: in-order
            out_of_order: 1

            # total cycles
            cycles: 7619082

            # list of all stages from fetch to execute (inclusive).
            fetch_to_exe_stages: 
                - fetch_1
                - fetch_2
                - decode
                - rename_int
                - dispatch
                - issue
                - reg_read_int
                - execute

            # number of stages from fetch to execute. (perfect_pipelining only) 
            fetch_to_exe_depth: 11

            stages:
                fetch_1:
                    # list of timing paths. the maximum determines the delay of
                    # the stage
                    paths:
                        - [Fetch1Logic, BTB]
                        - [Fetch1Logic, BP]
                        - [L1ICache]
                    components:
                        Fetch1Logic:
                            type: Logic
                            fetch_width: 4
                            accesses: 4554708
                        BTB:
                            type: CactiSRAM
                            words: 1024
                            ways: 4
                            width: 64
                            read_ports: 4
                            write_ports: 1
                            read_accesses: 18218834
                            write_accesses: 49751
                        BP: &BP_0
                            type: CactiSRAM
                            words: 1024
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 873744
                            write_accesses: 1017373
                        RAS:
                            type: SRAM
                            words: 16
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 58584
                            write_accesses: 62520
                        L1ICache:
                            type: Cache
                            sets: 128
                            block_size: 6
                            ways: 4
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 18219512
                            write_accesses: 537
                fetch_2:
                    paths:
                        - [Fetch2Logic]
                    components:
                        Fetch2Logic:
                            type: Logic
                            fetch_width: 4
                            accesses: 4554708
                        CTIQ:
                            type: SRAM
                            words: 16
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 1017373
                            write_accesses: 1976912
                decode:
                    paths:
                        - [DecodeLogic, InstBuff]
                    components:
                        DecodeLogic:
                            type: Logic
                            fetch_width: 4
                            accesses: 4554708
                        InstBuff:
                            type: SRAM
                            words: 8
                            width: 96
                            read_ports: 4
                            write_ports: 4
                            read_accesses: 15633858
                            write_accesses: 18218834
                rename_int:
                    paths:
                        - [RenameLogic, RMT]
                        - [RenameLogic, Freelist]
                    components:
                        RenameLogic:
                            type: Logic
                            fetch_width: 4
                            accesses: 3780084
                        Freelist:
                            type: SRAM
                            words: 128
                            width: 6
                            read_ports: 4
                            write_ports: 4
                            read_accesses: 12651960
                            write_accesses: 7725292
                        RMT:
                            type: SRAM
                            words: 32
                            width: 6
                            read_ports: 8
                            write_ports: 4
                            read_accesses: 20623168
                            write_accesses: 12651960
                        AMT:
                            type: SRAM
                            words: 32
                            width: 6
                            read_ports: 4
                            write_ports: 4
                            read_accesses: 9656615
                            write_accesses: 9656615
                dispatch:
                    paths:
                        - [DispatchLogic]
                    components:
                        DispatchLogic:
                            type: Logic
                            fetch_width: 4
                            issue_width: 4
                            accesses: 3908464
                # unified issue queue
                issue:
                    paths:
                        - [IssueLogic, Src1CAM]
                        - [IssueLogic, PayloadRAM]
                    components:
                        IssueLogic:
                            type: Logic
                            fetch_width: 4
                            issue_width: 4
                            size_iq: 64
                            accesses: 3427422
                        PayloadRAM:
                            type: SRAM
                            words: 64
                            width: 64
                            read_ports: 8
                            write_ports: 4
                            read_accesses: 13709688
                            write_accesses: 15633858
                        Src1CAM: &SrcCAM_0
                            type: CAM
                            words: 64
                            width: 7
                            read_ports: 4
                            write_ports: 4
                            read_accesses: 13709688
                            write_accesses: 14959730
                        Src2CAM: *SrcCAM_0
                reg_read_int:
                    paths:
                        - [RegReadLogic, RegFile]
                    components:
                        RegReadLogic:
                            type: Logic
                            issue_width: 4
                            accesses: 3427117
                        RegFile:
                            type: SRAM
                            words: 128
                            width: 64
                            read_ports: 8
                            write_ports: 4
                            read_accesses: 19590648
                            write_accesses: 9702300
                execute:
                    paths:
                        - [ExecuteMLogic]
                        - [ExecuteCtrlLogic]
                        - [ExecuteSLogic]
                        - [ExecuteCLogic]
                    components:
                        ExecuteMLogic:
                            type: Logic
                            accesses: 4169444
                        ExecuteCtrlLogic:
                            type: Logic
                            accesses: 1307586
                        ExecuteSLogic:
                            type: Logic
                            accesses: 7071362
                        ExecuteCLogic:
                            type: Logic
                            depth: 16
                            accesses: 16
                lsu:
                    paths:
                        - [LSULogic, LDQ_CAM]
                        - [L1DCache]
                    components:
                        LSULogic:
                            type: Logic
                            issue_width: 4
                            retire_width: 4
                            size_lsq: 64
                            # lsu access includes a load and a store
                            accesses: 2084722
                        LDQ_CAM:
                            type: CAM
                            words: 64
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 1375720
                            write_accesses: 2793723
                        STQ_CAM:
                            type: CAM
                            words: 64
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 2793723
                            write_accesses: 1375720
                        LAST_ST_CAM:
                            type: CAM
                            words: 64
                            width: 4
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 2793723
                            write_accesses: 2793723
                        STQ_DATA_RAM:
                            type: SRAM
                            words: 64
                            width: 64
                            read_ports: 1
                            write_ports: 1
                            read_accesses: 1100576
                            write_accesses: 1375720
                        L1DCache:
                            type: Cache
                            sets: 128
                            block_size: 6
                            ways: 4
                            read_ports: 1
                            write_ports: 1
                            rw_ports: 1
                            read_accesses: 2771134
                            write_accesses: 1401784
                retire:
                    paths:
                        - [RetireLogic, ActiveList]
                    components:
                        RetireLogic:
                            type: Logic
                            fetch_width: 4
                            issue_width: 4
                            retire_width: 4
                            accesses: 2414153
                        ActiveList:
                            type: SRAM
                            words: 256
                            width: 64
                            read_ports: 4
                            write_ports: 4
                            read_accesses: 9999993
                            write_accesses: 15633858
            components:
                L2:
                    type: Cache
                    sets: 512
                    block_size: 6
                    ways: 8
                    rw_ports: 2
                    banks: 4
                    read_accesses: 77255
                    write_accesses: 50366

    components:
        L3:
            type: Cache
            sets: 4096
            block_size: 6
            ways: 16
            rw_ports: 2
            banks: 8
            read_accesses: 43391
            write_accesses: 18035

