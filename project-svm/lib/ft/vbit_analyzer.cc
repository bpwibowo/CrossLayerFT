/**********************************************************
 *
 * Vulnerable bits analyzer implementation code
 *
 * First author: Bagus Wibowo
 * created: 11/12/2014
 **********************************************************/

#include <iostream>
#include <iomanip>
#include "vbit_analyzer.h"
#include "term_style.h"

#define VBIT_SUMMARY_LOG_FILE FULL_PATH("results/vbit_summary.yaml")

VbitAnalyzer::VbitAnalyzer(SimLog *simlog, std::string base_output_path) :
  FtAnalyzer(simlog, base_output_path) {

}

VbitAnalyzer::~VbitAnalyzer() {
}

bool VbitAnalyzer::Analyze(uint64_t max_clock) {
    std::cout << "[vbit_analyzer] INFO: Starting vulnerable bits analysis..." <<
        std::flush;

    summary_file_.open(VBIT_SUMMARY_LOG_FILE, std::ios::out | std::ios::trunc);

    if (summary_file_.is_open()) {

        LogVbitHeader(STRUCTURE_IQ);
        LogVbit(STRUCTURE_IQ, OPCODE_LB, "LB");
        LogVbit(STRUCTURE_IQ, OPCODE_LBU, "LBU");
        LogVbit(STRUCTURE_IQ, OPCODE_LH, "LH");
        LogVbit(STRUCTURE_IQ, OPCODE_LHU, "LHU");
        LogVbit(STRUCTURE_IQ, OPCODE_LW, "LW");
        LogVbit(STRUCTURE_IQ, OPCODE_LWU, "LWU");
        LogVbit(STRUCTURE_IQ, OPCODE_SB, "SB");
        LogVbit(STRUCTURE_IQ, OPCODE_SH, "SH");
        LogVbit(STRUCTURE_IQ, OPCODE_SW, "SW");
        LogVbit(STRUCTURE_IQ, OPCODE_LD, "LD");
        LogVbit(STRUCTURE_IQ, OPCODE_SD, "SD");
        LogVbit(STRUCTURE_IQ, OPCODE_LWL, "LWL");
        LogVbit(STRUCTURE_IQ, OPCODE_LWR, "LWR");
        LogVbit(STRUCTURE_IQ, OPCODE_LDL, "LDL");
        LogVbit(STRUCTURE_IQ, OPCODE_LDR, "LDR");
        LogVbit(STRUCTURE_IQ, OPCODE_SWL, "SWL");
        LogVbit(STRUCTURE_IQ, OPCODE_SWR, "SWR");
        LogVbit(STRUCTURE_IQ, OPCODE_SDL, "SDL");
        LogVbit(STRUCTURE_IQ, OPCODE_SDR, "SDR");
        LogVbit(STRUCTURE_IQ, OPCODE_LL, "LL");
        LogVbit(STRUCTURE_IQ, OPCODE_LLD, "LLD");
        LogVbit(STRUCTURE_IQ, OPCODE_SC_0, "SC_0");
        LogVbit(STRUCTURE_IQ, OPCODE_SC_1, "SC_1");
        LogVbit(STRUCTURE_IQ, OPCODE_SCD_0, "SCD_0");
        LogVbit(STRUCTURE_IQ, OPCODE_SCD_1, "SCD_1");
        LogVbit(STRUCTURE_IQ, OPCODE_ADDI, "ADDI");
        LogVbit(STRUCTURE_IQ, OPCODE_ADDIU, "ADDIU");
        LogVbit(STRUCTURE_IQ, OPCODE_ANDI, "ANDI");
        LogVbit(STRUCTURE_IQ, OPCODE_LUI, "LUI");
        LogVbit(STRUCTURE_IQ, OPCODE_ORI, "ORI");
        LogVbit(STRUCTURE_IQ, OPCODE_SLTI, "SLTI");
        LogVbit(STRUCTURE_IQ, OPCODE_SLTIU, "SLTIU");
        LogVbit(STRUCTURE_IQ, OPCODE_XORI, "XORI");
        LogVbit(STRUCTURE_IQ, OPCODE_DADDI, "DADDI");
        LogVbit(STRUCTURE_IQ, OPCODE_DADDIU, "DADDIU");
        LogVbit(STRUCTURE_IQ, OPCODE_ADD, "ADD");
        LogVbit(STRUCTURE_IQ, OPCODE_ADDU, "ADDU");
        LogVbit(STRUCTURE_IQ, OPCODE_AND, "AND");
        LogVbit(STRUCTURE_IQ, OPCODE_NOR, "NOR");
        LogVbit(STRUCTURE_IQ, OPCODE_OR, "OR");
        LogVbit(STRUCTURE_IQ, OPCODE_SLT, "SLT");
        LogVbit(STRUCTURE_IQ, OPCODE_SLTU, "SLTU");
        LogVbit(STRUCTURE_IQ, OPCODE_SUB, "SUB");
        LogVbit(STRUCTURE_IQ, OPCODE_SUBU, "SUBU");
        LogVbit(STRUCTURE_IQ, OPCODE_XOR, "XOR");
        LogVbit(STRUCTURE_IQ, OPCODE_DADD, "DADD");
        LogVbit(STRUCTURE_IQ, OPCODE_DADDU, "DADDU");
        LogVbit(STRUCTURE_IQ, OPCODE_DSUB, "DSUB");
        LogVbit(STRUCTURE_IQ, OPCODE_DSUBU, "DSUBU");
        LogVbit(STRUCTURE_IQ, OPCODE_CLO, "CLO");
        LogVbit(STRUCTURE_IQ, OPCODE_CLZ, "CLZ");
        LogVbit(STRUCTURE_IQ, OPCODE_ROTR, "ROTR");
        LogVbit(STRUCTURE_IQ, OPCODE_ROTRV, "ROTRV");
        LogVbit(STRUCTURE_IQ, OPCODE_SLL, "SLL");
        LogVbit(STRUCTURE_IQ, OPCODE_SLLV, "SLLV");
        LogVbit(STRUCTURE_IQ, OPCODE_SRA, "SRA");
        LogVbit(STRUCTURE_IQ, OPCODE_SRAV, "SRAV");
        LogVbit(STRUCTURE_IQ, OPCODE_SRL, "SRL");
        LogVbit(STRUCTURE_IQ, OPCODE_SRLV, "SRLV");
        LogVbit(STRUCTURE_IQ, OPCODE_DSLL, "DSLL");
        LogVbit(STRUCTURE_IQ, OPCODE_DSLL32, "DSLL32");
        LogVbit(STRUCTURE_IQ, OPCODE_DSLLV, "DSLLV");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRL, "DSRL");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRL32, "DSRL32");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRLV, "DSRLV");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRA, "DSRA");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRA32, "DSRA32");
        LogVbit(STRUCTURE_IQ, OPCODE_DSRAV, "DSRAV");
        LogVbit(STRUCTURE_IQ, OPCODE_DIV_LO, "DIV_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DIV_HI, "DIV_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_DIVU_LO, "DIVU_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DIVU_HI, "DIVU_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_DDIV_LO, "DDIV_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DDIV_HI, "DDIV_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_DDIVU_LO, "DDIVU_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DDIVU_HI, "DDIVU_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_MADD, "MADD");
        LogVbit(STRUCTURE_IQ, OPCODE_MADDU, "MADDU");
        LogVbit(STRUCTURE_IQ, OPCODE_MFHI, "MFHI");
        LogVbit(STRUCTURE_IQ, OPCODE_MFLO, "MFLO");
        LogVbit(STRUCTURE_IQ, OPCODE_MSUB, "MSUB");
        LogVbit(STRUCTURE_IQ, OPCODE_MSUBU, "MSUBU");
        LogVbit(STRUCTURE_IQ, OPCODE_MTHI, "MTHI");
        LogVbit(STRUCTURE_IQ, OPCODE_MTLO, "MTLO");
        LogVbit(STRUCTURE_IQ, OPCODE_MUL, "MUL");
        LogVbit(STRUCTURE_IQ, OPCODE_MULT_LO, "MULT_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_MULT_HI, "MULT_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_MULTU_LO, "MULTU_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_MULTU_HI, "MULTU_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_DMULT_LO, "DMULT_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DMULT_HI, "DMULT_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_DMULTU_LO, "DMULTU_LO");
        LogVbit(STRUCTURE_IQ, OPCODE_DMULTU_HI, "DMULTU_HI");
        LogVbit(STRUCTURE_IQ, OPCODE_J, "J");
        LogVbit(STRUCTURE_IQ, OPCODE_JAL, "JAL");
        LogVbit(STRUCTURE_IQ, OPCODE_JALX, "JALX");
        LogVbit(STRUCTURE_IQ, OPCODE_JALR, "JALR");
        LogVbit(STRUCTURE_IQ, OPCODE_JALR_HB, "JALR_HB");
        LogVbit(STRUCTURE_IQ, OPCODE_JR, "JR");
        LogVbit(STRUCTURE_IQ, OPCODE_JR_HB, "JR_HB");
        LogVbit(STRUCTURE_IQ, OPCODE_BEQ, "BEQ");
        LogVbit(STRUCTURE_IQ, OPCODE_BNE, "BNE");
        LogVbit(STRUCTURE_IQ, OPCODE_BGEZ, "BGEZ");
        LogVbit(STRUCTURE_IQ, OPCODE_BGEZAL, "BGEZAL");
        LogVbit(STRUCTURE_IQ, OPCODE_BGTZ, "BGTZ");
        LogVbit(STRUCTURE_IQ, OPCODE_BLEZ, "BLEZ");
        LogVbit(STRUCTURE_IQ, OPCODE_BLTZ, "BLTZ");
        LogVbit(STRUCTURE_IQ, OPCODE_BLTZAL, "BLTZAL");
        LogVbit(STRUCTURE_IQ, OPCODE_BEQL, "BEQL");
        LogVbit(STRUCTURE_IQ, OPCODE_BGEZALL, "BGEZALL");
        LogVbit(STRUCTURE_IQ, OPCODE_BGEZL, "BGEZL");
        LogVbit(STRUCTURE_IQ, OPCODE_BGTZL, "BGTZL");
        LogVbit(STRUCTURE_IQ, OPCODE_BLEZL, "BLEZL");
        LogVbit(STRUCTURE_IQ, OPCODE_BLTZALL, "BLTZALL");
        LogVbit(STRUCTURE_IQ, OPCODE_BLTZL, "BLTZL");
        LogVbit(STRUCTURE_IQ, OPCODE_BNEL, "BNEL");
        LogVbit(STRUCTURE_IQ, OPCODE_SYNC, "SYNC");
        LogVbit(STRUCTURE_IQ, OPCODE_SYNCI, "SYNCI");
        LogVbit(STRUCTURE_IQ, OPCODE_BREAK, "BREAK");
        LogVbit(STRUCTURE_IQ, OPCODE_SYSCALL, "SYSCALL");
        LogVbit(STRUCTURE_IQ, OPCODE_TEQ, "TEQ");
        LogVbit(STRUCTURE_IQ, OPCODE_TGE, "TGE");
        LogVbit(STRUCTURE_IQ, OPCODE_TGEU, "TGEU");
        LogVbit(STRUCTURE_IQ, OPCODE_TLT, "TLT");
        LogVbit(STRUCTURE_IQ, OPCODE_TLTU, "TLTU");
        LogVbit(STRUCTURE_IQ, OPCODE_TNE, "TNE");
        LogVbit(STRUCTURE_IQ, OPCODE_TEQI, "TEQI");
        LogVbit(STRUCTURE_IQ, OPCODE_TGEI, "TGEI");
        LogVbit(STRUCTURE_IQ, OPCODE_TGEIU, "TGEIU");
        LogVbit(STRUCTURE_IQ, OPCODE_TLTI, "TLTI");
        LogVbit(STRUCTURE_IQ, OPCODE_TLTIU, "TLTIU");
        LogVbit(STRUCTURE_IQ, OPCODE_TNEI, "TNEI");
        LogVbit(STRUCTURE_IQ, OPCODE_PREF, "PREF");
        LogVbit(STRUCTURE_IQ, OPCODE_PREFX, "PREFX");
        LogVbit(STRUCTURE_IQ, OPCODE_NOP, "NOP");
        LogVbit(STRUCTURE_IQ, OPCODE_SSNOP, "SSNOP");
        LogVbit(STRUCTURE_IQ, OPCODE_EHB, "EHB");
        LogVbit(STRUCTURE_IQ, OPCODE_EXT, "EXT");
        LogVbit(STRUCTURE_IQ, OPCODE_INS, "INS");
        LogVbit(STRUCTURE_IQ, OPCODE_DEXT, "DEXT");
        LogVbit(STRUCTURE_IQ, OPCODE_DEXTM, "DEXTM");
        LogVbit(STRUCTURE_IQ, OPCODE_DEXTU, "DEXTU");
        LogVbit(STRUCTURE_IQ, OPCODE_DINS, "DINS");
        LogVbit(STRUCTURE_IQ, OPCODE_DINSM, "DINSM");
        LogVbit(STRUCTURE_IQ, OPCODE_DINSU, "DINSU");
        LogVbit(STRUCTURE_IQ, OPCODE_SEB, "SEB");
        LogVbit(STRUCTURE_IQ, OPCODE_SEH, "SEH");
        LogVbit(STRUCTURE_IQ, OPCODE_WSBH, "WSBH");
        LogVbit(STRUCTURE_IQ, OPCODE_RDHWR, "RDHWR");
        LogVbit(STRUCTURE_IQ, OPCODE_MOVN_0, "MOVN_0");
        LogVbit(STRUCTURE_IQ, OPCODE_MOVN_1, "MOVN_1");
        LogVbit(STRUCTURE_IQ, OPCODE_MOVZ_0, "MOVZ_0");
        LogVbit(STRUCTURE_IQ, OPCODE_MOVZ_1, "MOVZ_1");

        summary_file_ << std::endl;

        LogVbitHeader(STRUCTURE_ROB);
        LogVbit(STRUCTURE_ROB, OPCODE_LB, "LB");
        LogVbit(STRUCTURE_ROB, OPCODE_LBU, "LBU");
        LogVbit(STRUCTURE_ROB, OPCODE_LH, "LH");
        LogVbit(STRUCTURE_ROB, OPCODE_LHU, "LHU");
        LogVbit(STRUCTURE_ROB, OPCODE_LW, "LW");
        LogVbit(STRUCTURE_ROB, OPCODE_LWU, "LWU");
        LogVbit(STRUCTURE_ROB, OPCODE_SB, "SB");
        LogVbit(STRUCTURE_ROB, OPCODE_SH, "SH");
        LogVbit(STRUCTURE_ROB, OPCODE_SW, "SW");
        LogVbit(STRUCTURE_ROB, OPCODE_LD, "LD");
        LogVbit(STRUCTURE_ROB, OPCODE_SD, "SD");
        LogVbit(STRUCTURE_ROB, OPCODE_LWL, "LWL");
        LogVbit(STRUCTURE_ROB, OPCODE_LWR, "LWR");
        LogVbit(STRUCTURE_ROB, OPCODE_LDL, "LDL");
        LogVbit(STRUCTURE_ROB, OPCODE_LDR, "LDR");
        LogVbit(STRUCTURE_ROB, OPCODE_SWL, "SWL");
        LogVbit(STRUCTURE_ROB, OPCODE_SWR, "SWR");
        LogVbit(STRUCTURE_ROB, OPCODE_SDL, "SDL");
        LogVbit(STRUCTURE_ROB, OPCODE_SDR, "SDR");
        LogVbit(STRUCTURE_ROB, OPCODE_LL, "LL");
        LogVbit(STRUCTURE_ROB, OPCODE_LLD, "LLD");
        LogVbit(STRUCTURE_ROB, OPCODE_SC_0, "SC_0");
        LogVbit(STRUCTURE_ROB, OPCODE_SC_1, "SC_1");
        LogVbit(STRUCTURE_ROB, OPCODE_SCD_0, "SCD_0");
        LogVbit(STRUCTURE_ROB, OPCODE_SCD_1, "SCD_1");
        LogVbit(STRUCTURE_ROB, OPCODE_ADDI, "ADDI");
        LogVbit(STRUCTURE_ROB, OPCODE_ADDIU, "ADDIU");
        LogVbit(STRUCTURE_ROB, OPCODE_ANDI, "ANDI");
        LogVbit(STRUCTURE_ROB, OPCODE_LUI, "LUI");
        LogVbit(STRUCTURE_ROB, OPCODE_ORI, "ORI");
        LogVbit(STRUCTURE_ROB, OPCODE_SLTI, "SLTI");
        LogVbit(STRUCTURE_ROB, OPCODE_SLTIU, "SLTIU");
        LogVbit(STRUCTURE_ROB, OPCODE_XORI, "XORI");
        LogVbit(STRUCTURE_ROB, OPCODE_DADDI, "DADDI");
        LogVbit(STRUCTURE_ROB, OPCODE_DADDIU, "DADDIU");
        LogVbit(STRUCTURE_ROB, OPCODE_ADD, "ADD");
        LogVbit(STRUCTURE_ROB, OPCODE_ADDU, "ADDU");
        LogVbit(STRUCTURE_ROB, OPCODE_AND, "AND");
        LogVbit(STRUCTURE_ROB, OPCODE_NOR, "NOR");
        LogVbit(STRUCTURE_ROB, OPCODE_OR, "OR");
        LogVbit(STRUCTURE_ROB, OPCODE_SLT, "SLT");
        LogVbit(STRUCTURE_ROB, OPCODE_SLTU, "SLTU");
        LogVbit(STRUCTURE_ROB, OPCODE_SUB, "SUB");
        LogVbit(STRUCTURE_ROB, OPCODE_SUBU, "SUBU");
        LogVbit(STRUCTURE_ROB, OPCODE_XOR, "XOR");
        LogVbit(STRUCTURE_ROB, OPCODE_DADD, "DADD");
        LogVbit(STRUCTURE_ROB, OPCODE_DADDU, "DADDU");
        LogVbit(STRUCTURE_ROB, OPCODE_DSUB, "DSUB");
        LogVbit(STRUCTURE_ROB, OPCODE_DSUBU, "DSUBU");
        LogVbit(STRUCTURE_ROB, OPCODE_CLO, "CLO");
        LogVbit(STRUCTURE_ROB, OPCODE_CLZ, "CLZ");
        LogVbit(STRUCTURE_ROB, OPCODE_ROTR, "ROTR");
        LogVbit(STRUCTURE_ROB, OPCODE_ROTRV, "ROTRV");
        LogVbit(STRUCTURE_ROB, OPCODE_SLL, "SLL");
        LogVbit(STRUCTURE_ROB, OPCODE_SLLV, "SLLV");
        LogVbit(STRUCTURE_ROB, OPCODE_SRA, "SRA");
        LogVbit(STRUCTURE_ROB, OPCODE_SRAV, "SRAV");
        LogVbit(STRUCTURE_ROB, OPCODE_SRL, "SRL");
        LogVbit(STRUCTURE_ROB, OPCODE_SRLV, "SRLV");
        LogVbit(STRUCTURE_ROB, OPCODE_DSLL, "DSLL");
        LogVbit(STRUCTURE_ROB, OPCODE_DSLL32, "DSLL32");
        LogVbit(STRUCTURE_ROB, OPCODE_DSLLV, "DSLLV");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRL, "DSRL");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRL32, "DSRL32");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRLV, "DSRLV");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRA, "DSRA");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRA32, "DSRA32");
        LogVbit(STRUCTURE_ROB, OPCODE_DSRAV, "DSRAV");
        LogVbit(STRUCTURE_ROB, OPCODE_DIV_LO, "DIV_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DIV_HI, "DIV_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_DIVU_LO, "DIVU_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DIVU_HI, "DIVU_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_DDIV_LO, "DDIV_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DDIV_HI, "DDIV_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_DDIVU_LO, "DDIVU_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DDIVU_HI, "DDIVU_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_MADD, "MADD");
        LogVbit(STRUCTURE_ROB, OPCODE_MADDU, "MADDU");
        LogVbit(STRUCTURE_ROB, OPCODE_MFHI, "MFHI");
        LogVbit(STRUCTURE_ROB, OPCODE_MFLO, "MFLO");
        LogVbit(STRUCTURE_ROB, OPCODE_MSUB, "MSUB");
        LogVbit(STRUCTURE_ROB, OPCODE_MSUBU, "MSUBU");
        LogVbit(STRUCTURE_ROB, OPCODE_MTHI, "MTHI");
        LogVbit(STRUCTURE_ROB, OPCODE_MTLO, "MTLO");
        LogVbit(STRUCTURE_ROB, OPCODE_MUL, "MUL");
        LogVbit(STRUCTURE_ROB, OPCODE_MULT_LO, "MULT_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_MULT_HI, "MULT_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_MULTU_LO, "MULTU_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_MULTU_HI, "MULTU_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_DMULT_LO, "DMULT_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DMULT_HI, "DMULT_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_DMULTU_LO, "DMULTU_LO");
        LogVbit(STRUCTURE_ROB, OPCODE_DMULTU_HI, "DMULTU_HI");
        LogVbit(STRUCTURE_ROB, OPCODE_J, "J");
        LogVbit(STRUCTURE_ROB, OPCODE_JAL, "JAL");
        LogVbit(STRUCTURE_ROB, OPCODE_JALX, "JALX");
        LogVbit(STRUCTURE_ROB, OPCODE_JALR, "JALR");
        LogVbit(STRUCTURE_ROB, OPCODE_JALR_HB, "JALR_HB");
        LogVbit(STRUCTURE_ROB, OPCODE_JR, "JR");
        LogVbit(STRUCTURE_ROB, OPCODE_JR_HB, "JR_HB");
        LogVbit(STRUCTURE_ROB, OPCODE_BEQ, "BEQ");
        LogVbit(STRUCTURE_ROB, OPCODE_BNE, "BNE");
        LogVbit(STRUCTURE_ROB, OPCODE_BGEZ, "BGEZ");
        LogVbit(STRUCTURE_ROB, OPCODE_BGEZAL, "BGEZAL");
        LogVbit(STRUCTURE_ROB, OPCODE_BGTZ, "BGTZ");
        LogVbit(STRUCTURE_ROB, OPCODE_BLEZ, "BLEZ");
        LogVbit(STRUCTURE_ROB, OPCODE_BLTZ, "BLTZ");
        LogVbit(STRUCTURE_ROB, OPCODE_BLTZAL, "BLTZAL");
        LogVbit(STRUCTURE_ROB, OPCODE_BEQL, "BEQL");
        LogVbit(STRUCTURE_ROB, OPCODE_BGEZALL, "BGEZALL");
        LogVbit(STRUCTURE_ROB, OPCODE_BGEZL, "BGEZL");
        LogVbit(STRUCTURE_ROB, OPCODE_BGTZL, "BGTZL");
        LogVbit(STRUCTURE_ROB, OPCODE_BLEZL, "BLEZL");
        LogVbit(STRUCTURE_ROB, OPCODE_BLTZALL, "BLTZALL");
        LogVbit(STRUCTURE_ROB, OPCODE_BLTZL, "BLTZL");
        LogVbit(STRUCTURE_ROB, OPCODE_BNEL, "BNEL");
        LogVbit(STRUCTURE_ROB, OPCODE_SYNC, "SYNC");
        LogVbit(STRUCTURE_ROB, OPCODE_SYNCI, "SYNCI");
        LogVbit(STRUCTURE_ROB, OPCODE_BREAK, "BREAK");
        LogVbit(STRUCTURE_ROB, OPCODE_SYSCALL, "SYSCALL");
        LogVbit(STRUCTURE_ROB, OPCODE_TEQ, "TEQ");
        LogVbit(STRUCTURE_ROB, OPCODE_TGE, "TGE");
        LogVbit(STRUCTURE_ROB, OPCODE_TGEU, "TGEU");
        LogVbit(STRUCTURE_ROB, OPCODE_TLT, "TLT");
        LogVbit(STRUCTURE_ROB, OPCODE_TLTU, "TLTU");
        LogVbit(STRUCTURE_ROB, OPCODE_TNE, "TNE");
        LogVbit(STRUCTURE_ROB, OPCODE_TEQI, "TEQI");
        LogVbit(STRUCTURE_ROB, OPCODE_TGEI, "TGEI");
        LogVbit(STRUCTURE_ROB, OPCODE_TGEIU, "TGEIU");
        LogVbit(STRUCTURE_ROB, OPCODE_TLTI, "TLTI");
        LogVbit(STRUCTURE_ROB, OPCODE_TLTIU, "TLTIU");
        LogVbit(STRUCTURE_ROB, OPCODE_TNEI, "TNEI");
        LogVbit(STRUCTURE_ROB, OPCODE_PREF, "PREF");
        LogVbit(STRUCTURE_ROB, OPCODE_PREFX, "PREFX");
        LogVbit(STRUCTURE_ROB, OPCODE_NOP, "NOP");
        LogVbit(STRUCTURE_ROB, OPCODE_SSNOP, "SSNOP");
        LogVbit(STRUCTURE_ROB, OPCODE_EHB, "EHB");
        LogVbit(STRUCTURE_ROB, OPCODE_EXT, "EXT");
        LogVbit(STRUCTURE_ROB, OPCODE_INS, "INS");
        LogVbit(STRUCTURE_ROB, OPCODE_DEXT, "DEXT");
        LogVbit(STRUCTURE_ROB, OPCODE_DEXTM, "DEXTM");
        LogVbit(STRUCTURE_ROB, OPCODE_DEXTU, "DEXTU");
        LogVbit(STRUCTURE_ROB, OPCODE_DINS, "DINS");
        LogVbit(STRUCTURE_ROB, OPCODE_DINSM, "DINSM");
        LogVbit(STRUCTURE_ROB, OPCODE_DINSU, "DINSU");
        LogVbit(STRUCTURE_ROB, OPCODE_SEB, "SEB");
        LogVbit(STRUCTURE_ROB, OPCODE_SEH, "SEH");
        LogVbit(STRUCTURE_ROB, OPCODE_WSBH, "WSBH");
        LogVbit(STRUCTURE_ROB, OPCODE_RDHWR, "RDHWR");
        LogVbit(STRUCTURE_ROB, OPCODE_MOVN_0, "MOVN_0");
        LogVbit(STRUCTURE_ROB, OPCODE_MOVN_1, "MOVN_1");
        LogVbit(STRUCTURE_ROB, OPCODE_MOVZ_0, "MOVZ_0");
        LogVbit(STRUCTURE_ROB, OPCODE_MOVZ_1, "MOVZ_1");

        summary_file_ << std::endl;

        LogVbitHeader(STRUCTURE_LQ);
        LogVbit(STRUCTURE_LQ, OPCODE_LB, "LB");
        LogVbit(STRUCTURE_LQ, OPCODE_LBU, "LBU");
        LogVbit(STRUCTURE_LQ, OPCODE_LH, "LH");
        LogVbit(STRUCTURE_LQ, OPCODE_LHU, "LHU");
        LogVbit(STRUCTURE_LQ, OPCODE_LW, "LW");
        LogVbit(STRUCTURE_LQ, OPCODE_LWU, "LWU");
        LogVbit(STRUCTURE_LQ, OPCODE_LD, "LD");
        LogVbit(STRUCTURE_LQ, OPCODE_LWL, "LWL");
        LogVbit(STRUCTURE_LQ, OPCODE_LWR, "LWR");
        LogVbit(STRUCTURE_LQ, OPCODE_LDL, "LDL");
        LogVbit(STRUCTURE_LQ, OPCODE_LDR, "LDR");
        LogVbit(STRUCTURE_LQ, OPCODE_LL, "LL");
        LogVbit(STRUCTURE_LQ, OPCODE_LLD, "LLD");
        LogVbit(STRUCTURE_LQ, OPCODE_PREF, "PREF");
        LogVbit(STRUCTURE_LQ, OPCODE_PREFX, "PREFX");

        summary_file_ << std::endl;

        LogVbitHeader(STRUCTURE_SQ);
        LogVbit(STRUCTURE_SQ, OPCODE_SB, "SB");
        LogVbit(STRUCTURE_SQ, OPCODE_SH, "SH");
        LogVbit(STRUCTURE_SQ, OPCODE_SW, "SW");
        LogVbit(STRUCTURE_SQ, OPCODE_SD, "SD");
        LogVbit(STRUCTURE_SQ, OPCODE_SWL, "SWL");
        LogVbit(STRUCTURE_SQ, OPCODE_SWR, "SWR");
        LogVbit(STRUCTURE_SQ, OPCODE_SDL, "SDL");
        LogVbit(STRUCTURE_SQ, OPCODE_SDR, "SDR");
        LogVbit(STRUCTURE_SQ, OPCODE_SC_0, "SC_0");
        LogVbit(STRUCTURE_SQ, OPCODE_SCD_0, "SCD_0");

        summary_file_ << std::endl;

        LogVbitHeader(STRUCTURE_IBUFF);
        LogVbit(STRUCTURE_IBUFF, OPCODE_LB, "LB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LBU, "LBU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LH, "LH");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LHU, "LHU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LW, "LW");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LWU, "LWU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SB, "SB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SH, "SH");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SW, "SW");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LD, "LD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SD, "SD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LWL, "LWL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LWR, "LWR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LDL, "LDL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LDR, "LDR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SWL, "SWL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SWR, "SWR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SDL, "SDL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SDR, "SDR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LL, "LL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LLD, "LLD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SC_0, "SC_0");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SC_1, "SC_1");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SCD_0, "SCD_0");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SCD_1, "SCD_1");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ADDI, "ADDI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ADDIU, "ADDIU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ANDI, "ANDI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_LUI, "LUI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ORI, "ORI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLTI, "SLTI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLTIU, "SLTIU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_XORI, "XORI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DADDI, "DADDI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DADDIU, "DADDIU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ADD, "ADD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ADDU, "ADDU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_AND, "AND");
        LogVbit(STRUCTURE_IBUFF, OPCODE_NOR, "NOR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_OR, "OR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLT, "SLT");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLTU, "SLTU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SUB, "SUB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SUBU, "SUBU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_XOR, "XOR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DADD, "DADD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DADDU, "DADDU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSUB, "DSUB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSUBU, "DSUBU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_CLO, "CLO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_CLZ, "CLZ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ROTR, "ROTR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_ROTRV, "ROTRV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLL, "SLL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SLLV, "SLLV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SRA, "SRA");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SRAV, "SRAV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SRL, "SRL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SRLV, "SRLV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSLL, "DSLL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSLL32, "DSLL32");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSLLV, "DSLLV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRL, "DSRL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRL32, "DSRL32");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRLV, "DSRLV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRA, "DSRA");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRA32, "DSRA32");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DSRAV, "DSRAV");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DIV_LO, "DIV_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DIV_HI, "DIV_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DIVU_LO, "DIVU_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DIVU_HI, "DIVU_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DDIV_LO, "DDIV_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DDIV_HI, "DDIV_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DDIVU_LO, "DDIVU_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DDIVU_HI, "DDIVU_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MADD, "MADD");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MADDU, "MADDU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MFHI, "MFHI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MFLO, "MFLO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MSUB, "MSUB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MSUBU, "MSUBU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MTHI, "MTHI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MTLO, "MTLO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MUL, "MUL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MULT_LO, "MULT_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MULT_HI, "MULT_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MULTU_LO, "MULTU_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MULTU_HI, "MULTU_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DMULT_LO, "DMULT_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DMULT_HI, "DMULT_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DMULTU_LO, "DMULTU_LO");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DMULTU_HI, "DMULTU_HI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_J, "J");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JAL, "JAL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JALX, "JALX");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JALR, "JALR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JALR_HB, "JALR_HB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JR, "JR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_JR_HB, "JR_HB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BEQ, "BEQ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BNE, "BNE");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGEZ, "BGEZ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGEZAL, "BGEZAL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGTZ, "BGTZ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLEZ, "BLEZ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLTZ, "BLTZ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLTZAL, "BLTZAL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BEQL, "BEQL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGEZALL, "BGEZALL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGEZL, "BGEZL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BGTZL, "BGTZL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLEZL, "BLEZL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLTZALL, "BLTZALL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BLTZL, "BLTZL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BNEL, "BNEL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SYNC, "SYNC");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SYNCI, "SYNCI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_BREAK, "BREAK");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SYSCALL, "SYSCALL");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TEQ, "TEQ");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TGE, "TGE");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TGEU, "TGEU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TLT, "TLT");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TLTU, "TLTU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TNE, "TNE");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TEQI, "TEQI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TGEI, "TGEI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TGEIU, "TGEIU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TLTI, "TLTI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TLTIU, "TLTIU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_TNEI, "TNEI");
        LogVbit(STRUCTURE_IBUFF, OPCODE_PREF, "PREF");
        LogVbit(STRUCTURE_IBUFF, OPCODE_PREFX, "PREFX");
        LogVbit(STRUCTURE_IBUFF, OPCODE_NOP, "NOP");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SSNOP, "SSNOP");
        LogVbit(STRUCTURE_IBUFF, OPCODE_EHB, "EHB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_EXT, "EXT");
        LogVbit(STRUCTURE_IBUFF, OPCODE_INS, "INS");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DEXT, "DEXT");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DEXTM, "DEXTM");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DEXTU, "DEXTU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DINS, "DINS");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DINSM, "DINSM");
        LogVbit(STRUCTURE_IBUFF, OPCODE_DINSU, "DINSU");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SEB, "SEB");
        LogVbit(STRUCTURE_IBUFF, OPCODE_SEH, "SEH");
        LogVbit(STRUCTURE_IBUFF, OPCODE_WSBH, "WSBH");
        LogVbit(STRUCTURE_IBUFF, OPCODE_RDHWR, "RDHWR");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MOVN_0, "MOVN_0");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MOVN_1, "MOVN_1");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MOVZ_0, "MOVZ_0");
        LogVbit(STRUCTURE_IBUFF, OPCODE_MOVZ_1, "MOVZ_1");

    }

    summary_file_.close();

    std::cout << " done" << std::endl;
    return true;
}

/* ------------------------------------------------ private function definitions ------------------------------------------------ */

void VbitAnalyzer::LogVbitHeader(structure_t structure) {
    summary_file_ << GetStructureName(structure) << ":" << std::endl;
}

void VbitAnalyzer::LogVbit(structure_t structure, int opcode, std::string name) {
    if (summary_file_.is_open()) {
        summary_file_ << "  " << name << ": {";
        summary_file_ << "opcode: ";
        summary_file_ << opcode;
        summary_file_ << ", imp: ";
        summary_file_ << GetVulnerableBitCount(structure, opcode, true);
        summary_file_ << ", unimp: ";
        summary_file_ << GetVulnerableBitCount(structure, opcode, false);
        summary_file_ << ", imp_appx: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, true);
        summary_file_ << ", unimp_appx: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, false);
        // from dispatch until complete/execute
        summary_file_ << ", imp_dispatch: ";
        summary_file_ << GetVulnerableBitCount(structure, opcode, true, true);
        summary_file_ << ", unimp_dispatch: ";
        summary_file_ << GetVulnerableBitCount(structure, opcode, false, true);
        summary_file_ << ", imp_appx_dispatch: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, true, true);
        summary_file_ << ", unimp_appx_dispatch: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, false, true);
        // 3-ones bit approximation
        summary_file_ << ", imp_appx_3bit: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, true, 3);
        summary_file_ << ", unimp_appx_3bit: ";
        summary_file_ << GetVulnerableBitCountAppx(structure, opcode, false, 3);
        summary_file_ << ", unused_bits: ";
        summary_file_ << GetUnusedBitCount(structure, opcode);
        summary_file_ << "}";
        summary_file_ << std::endl;
    }
}

/* end of file */
